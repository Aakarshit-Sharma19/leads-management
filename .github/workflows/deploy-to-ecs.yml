name: Build and Deploy to ECS


on:
  push:
    branches:
      - wip
      - master
env:
  AWS_REGION: ap-south-1                   # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: leads-management           # set this to your Amazon ECR repository name
  ECR_REPOSITORY_POLICY_TEXT: file://.aws/ecr/repository-policy-json
  ECS_TASK_DEFINITION: ./.aws/task-definition.json
  CONTAINER_NAME: leads-management


permissions:
  id-token: write # required to use OIDC authentication
  contents: read # required to checkout the code from the repo

jobs:
  build:
    name: Build Image
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3.3.0

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::129190006344:role/Github-Actions
          role-duration-seconds: 900 # the ttl of the session, in seconds.
          aws-region: ap-south-1 # use your region here.
        
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Check if AWS ECR repo exists
        id: check-ecr-repo
        run: |
          aws ecr describe-repositories --repository-names $ECR_REPOSITORY ||
          aws ecr create-repository --repository-name $ECR_REPOSITORY && \
          aws ecr set-repository-policy --repository-name $ECR_REPOSITORY $ECR_REPOSITORY_POLICY_TEXT
      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
#
#      - name: Render Amazon ECS task definition
#        id: render-web-container
#        uses: aws-actions/amazon-ecs-render-task-definition@v1
#        with:
#          task-definition: ${{ env.ECS_TASK_DEFINITION }}
#          container-name: ${{ env.CONTAINER_NAME }}
#          image: ${{ steps.build-image.outputs.image }}
#
#      - name: Deploy to Amazon ECS service
#        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
#        with:
#          task-definition: ${{ steps.render-web-container.outputs.task-definition }}
#          service: leads-management
#          cluster: isolated