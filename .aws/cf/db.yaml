AWSTemplateFormatVersion: "2010-09-09"
Description: Template creating an RDS instance with necessary config and security groups in a VPC
Parameters:
  ProjectName:
    Description: The name of the project
    Type: String
  VpcId:
    Description: The VpcId, the DB instance will be a part of
    Type: AWS::EC2::VPC::Id
  PrivateSubnet1:
    Description: First Private Subnet to Attach to subnet group
    Type: AWS::EC2::Subnet::Id
  PrivateSubnet2:
    Description: Second Private Subnet to Attach to subnet group
    Type: AWS::EC2::Subnet::Id
  DBName:
    Type: String
    Default: 'leads_management_database'
  PublicSecurityGroup:
    Description: The Security Group for the public subnets which can access the RDS instance
    Type: AWS::EC2::SecurityGroup::Id

Resources:
  DBSubnetGroup:
    Type: "AWS::RDS::DBSubnetGroup"
    Properties:
      DBSubnetGroupName: !Sub '${AWS::StackName}-DBSecurityGroup'
      DBSubnetGroupDescription: !Sub 'The Security Group for RDS serving for project ${ProjectName}'
      SubnetIds:
        - !Ref PrivateSubnet1
        - !Ref PrivateSubnet2

  RDSInstance:
    Type: "AWS::RDS::DBInstance"
    Properties:
      DBName: !Ref DBName
      MasterUsername: "postgres"
      DBInstanceClass: "db.t3.micro"
      Engine: "postgres"
      EngineVersion: "15.2"
      # noinspection YAMLSchemaValidation
      AllocatedStorage: 20
      AutoMinorVersionUpgrade: true
      ManageMasterUserPassword: true
      DBSubnetGroupName: !Ref DBSubnetGroup
      PubliclyAccessible: false
      MasterUserSecret:
        KmsKeyId: !Ref KMSKey
      VPCSecurityGroups:
        - !Ref PrivateVpcSecurityGroup
    UpdateReplacePolicy: Snapshot
    DeletionPolicy: Delete

  KMSKey:
    Type: 'AWS::KMS::Key'
    Properties:
      Description: Master User Key for DB
      EnableKeyRotation: True
      KeyPolicy:
        Version: "2012-10-17"
        Id: !Ref "AWS::StackName"
        Statement:
          - Sid: "Allow administration of the key"
            Effect: "Allow"
            Principal:
              AWS:
                Fn::Sub: 'arn:${AWS::Partition}:iam::${AWS::AccountId}:root'
            Action:
              - "kms:*"
            Resource: "*"

  PrivateVpcSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group enabling private access from VPC only, for RDS
      GroupName: !Sub '${AWS::StackName}-PrivateSecurityGroup'
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          SourceSecurityGroupId: !Ref PublicSecurityGroup
  
  PublicOutboundSecurityGroupRule:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId: !Ref PublicSecurityGroup
      IpProtocol: tcp
      FromPort: 5432
      ToPort: 5432
      DestinationSecurityGroupId: !Ref PrivateVpcSecurityGroup

Outputs:
  DBInstanceHost:
    Description: The Host URL for the DB instance
    Value: !GetAtt RDSInstance.Endpoint.Address
  DBInstancePort:
    Description: The Port for the DB instance
    Value: !GetAtt RDSInstance.Endpoint.Port
  DBName:
    Description: Name of the database
    Value: !Ref DBName
  DBSecretKmsArn:
    Description: The KMS Secret for DB Username and Password Credentials
    Value: !GetAtt KMSKey.Arn
  DBSecretArn:
    Description: The KMS Secret for DB Username and Password Credentials
    Value: !GetAtt RDSInstance.MasterUserSecret.SecretArn
